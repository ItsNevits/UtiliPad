---
export const prerender = false;
import Hero from "@/components/shared/Hero.astro";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import MainLayout from "@/Layouts/MainLayout.astro";

import { getCollection } from "astro:content";
import { getTranslation } from "@/i18n/index";
import type { Language } from "@/types/language.type";

const lang = Astro.params.lang as Language;

// Obtener todas las noticias y filtrar por idioma
const allNews = await getCollection("news", ({ data }) => !data.draft);

// Filtrar por idioma - verificar tanto el formato "lang/filename" como "lang\\filename"
const news = allNews.filter(({ id }) => {
  // Normalizar las barras para manejar Windows y Unix
  const normalizedId = id.replace(/\\/g, "/");
  return normalizedId.startsWith(`${lang}/`);
});

const sortedNews = news.sort(
  (a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
);

// Paginación
const ITEMS_PER_PAGE = 4;
const currentPage = Number(Astro.url.searchParams.get("page")) || 1;
const totalPages = Math.ceil(sortedNews.length / ITEMS_PER_PAGE);
const startIndex = (currentPage - 1) * ITEMS_PER_PAGE;
const endIndex = startIndex + ITEMS_PER_PAGE;
const paginatedNews = sortedNews.slice(startIndex, endIndex);
---

<MainLayout
  title={getTranslation(lang, "seo.pages.news.title")}
  description={getTranslation(lang, "seo.pages.news.description")}
>
  <section class="bg-[#dddfe0] m-4 rounded-2xl pb-10 md:pb-15">
    <Header />
    <section class="w-full max-w-7xl mx-auto flex flex-col">
      <Hero
        title={getTranslation(lang, "pages.news.title")}
        description={getTranslation(lang, "pages.news.description")}
      />
    </section>
  </section>

  <main class="max-w-7xl mx-auto px-4 py-3 mb-8 md:mb-12">
    {
      paginatedNews.length > 0 ? (
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 md:gap-5">
          {paginatedNews.map((article) => (
            <article class="opacity-0 sequence-item-tool bg-white rounded-xl border border-neutral-200 overflow-hidden hover:shadow-lg hover:border-neutral-300 transition-all group">
              <a
                href={`/${lang}/news/${article.id.replace(/\\/g, "/").replace(`${lang}/`, "")}`}
                class="flex flex-col justify-between h-full"
              >
                <div class="p-5">
                  <div class="flex items-start justify-between gap-3 mb-3">
                    <h3 class="text-lg font-bold text-neutral-800 group-hover:text-emerald-600 transition-colors line-clamp-2 flex-1">
                      {article.data.title}
                    </h3>
                    <div class="flex flex-wrap gap-1.5 flex-shrink-0">
                      {article.data.tags?.slice(0, 2).map((tag) => (
                        <span class="px-2 py-0.5 bg-emerald-100 text-emerald-700 rounded-full text-xs font-medium">
                          {tag}
                        </span>
                      ))}
                      {article.data.tags && article.data.tags.length > 2 && (
                        <span class="px-2 py-0.5 bg-neutral-100 text-neutral-600 rounded-full text-xs font-medium">
                          +{article.data.tags.length - 2}
                        </span>
                      )}
                    </div>
                  </div>

                  <div class="flex items-center gap-3 text-xs text-neutral-500 mb-3">
                    <span class="font-medium">{article.data.author}</span>
                    <span>•</span>
                    <time datetime={article.data.date.toISOString()}>
                      {article.data.date.toLocaleDateString(
                        lang === "es" ? "es-ES" : "en-US",
                        {
                          year: "numeric",
                          month: "short",
                          day: "numeric",
                        }
                      )}
                    </time>
                  </div>

                  <p class="text-sm text-neutral-600 leading-relaxed line-clamp-3">
                    {article.body
                      .slice(0, 150)
                      .replace(/^#.*\n\n?/, "")
                      .trim()}
                    ...
                  </p>
                </div>

                <div class="px-5 py-3 bg-neutral-50 border-t border-neutral-100 flex items-center justify-between">
                  <div class="flex items-center gap-2 text-xs text-neutral-500">
                    <svg
                      class="w-3.5 h-3.5"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"
                      />
                    </svg>
                    <span>
                      {getTranslation(lang, "pages.news.completeReading")}
                    </span>
                  </div>

                  <span class="text-emerald-600 text-sm font-semibold group-hover:gap-2 inline-flex items-center gap-1 transition-all">
                    {getTranslation(lang, "pages.news.readMore")}
                    <svg
                      class="w-4 h-4"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M9 5l7 7-7 7"
                      />
                    </svg>
                  </span>
                </div>
              </a>
            </article>
          ))}
        </div>
      ) : (
        <div class="text-center py-16">
          <div class="w-16 h-16 bg-neutral-100 rounded-full flex items-center justify-center mx-auto mb-4">
            <svg
              class="w-8 h-8 text-neutral-400"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9.5a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z"
              />
            </svg>
          </div>
          <h3 class="text-lg font-semibold text-neutral-700 mb-2">
            {getTranslation(lang, "pages.news.noPosts")}
          </h3>
          <p class="text-neutral-500 text-sm">
            {getTranslation(lang, "pages.news.noPostsDesc")}
          </p>
        </div>
      )
    }

    <!-- Paginación -->
    {
      totalPages > 1 && (
        <div class="mt-8 flex flex-col sm:flex-row items-center justify-between gap-4 p-5 bg-white rounded-xl border border-neutral-200 shadow-sm">
          <div class="text-sm text-neutral-600 font-medium">
            {getTranslation(lang, "pages.news.pagination.page")} {currentPage}{" "}
            {getTranslation(lang, "pages.news.pagination.of")} {totalPages}
          </div>

          <div class="flex gap-2">
            {currentPage > 1 && (
              <a
                href={`/${lang}/news?page=${currentPage - 1}`}
                class="cursor-pointer px-4 py-2 bg-white border border-neutral-300 hover:border-neutral-400 text-neutral-700 rounded-lg transition-all text-sm font-medium inline-flex items-center gap-2 shadow-sm hover:shadow"
              >
                <svg
                  class="w-4 h-4"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M15 19l-7-7 7-7"
                  />
                </svg>
                {getTranslation(lang, "pages.news.pagination.previous")}
              </a>
            )}

            <div class="flex gap-1.5">
              {Array.from({ length: totalPages }, (_, i) => i + 1).map(
                (page) => (
                  <a
                    href={`/${lang}/news?page=${page}`}
                    class={`cursor-pointer px-4 py-2 rounded-lg transition-all text-sm font-semibold ${
                      page === currentPage
                        ? "bg-emerald-500 text-white shadow-sm"
                        : "bg-white border border-neutral-300 hover:border-neutral-400 text-neutral-700 hover:shadow-sm"
                    }`}
                  >
                    {page}
                  </a>
                )
              )}
            </div>

            {currentPage < totalPages && (
              <a
                href={`/${lang}/news?page=${currentPage + 1}`}
                class="cursor-pointer px-4 py-2 bg-white border border-neutral-300 hover:border-neutral-400 text-neutral-700 rounded-lg transition-all text-sm font-medium inline-flex items-center gap-2 shadow-sm hover:shadow"
              >
                {getTranslation(lang, "pages.news.pagination.next")}
                <svg
                  class="w-4 h-4"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M9 5l7 7-7 7"
                  />
                </svg>
              </a>
            )}
          </div>
        </div>
      )
    }

    <!-- Estadísticas de noticias -->
    {
      sortedNews.length > 0 && (
        <div class="mt-6 p-5 bg-white rounded-xl border border-neutral-200 shadow-sm">
          <div class="flex flex-col sm:flex-row items-center justify-between gap-4">
            <div class="text-center sm:text-left">
              <h3 class="text-base font-bold text-neutral-800">
                {getTranslation(lang, "pages.news.statisticsTitle")}
              </h3>
              <p class="text-sm text-neutral-600">
                {getTranslation(lang, "pages.news.statisticsDescription")}
              </p>
            </div>

            <div class="flex gap-6">
              <div class="text-center">
                <div class="text-3xl font-bold text-emerald-600 tabular-nums">
                  {sortedNews.length}
                </div>
                <div class="text-xs font-medium text-neutral-600 mt-1">
                  {getTranslation(lang, "pages.news.articles")}
                </div>
              </div>
            </div>
          </div>
        </div>
      )
    }
  </main>

  <Footer />
</MainLayout>

<script>
  import { animateSequenceItems } from "@/assets/gsap/timeline";

  // Inicializar cuando el DOM esté listo
  document.addEventListener("DOMContentLoaded", () => {
    animateSequenceItems(".sequence-item-tool");
  });
  document.addEventListener("DOMContentLoaded", () => {
    animateSequenceItems(".sequence-item-tool");
  });
</script>
