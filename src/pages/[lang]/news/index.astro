---
export const prerender = false;
import Hero from "@components/shared/Hero.astro";
import MainLayout from "src/Layouts/MainLayout.astro";

import { getCollection } from "astro:content";
import type { Language } from "@@types/language.type";
import { getTranslation } from "@i18n/index";

const lang = Astro.params.lang as Language;

// Obtener todas las noticias y filtrar por idioma
const allNews = await getCollection("news", ({ data }) => !data.draft);

// Filtrar por idioma - verificar tanto el formato "lang/filename" como "lang\\filename"
const news = allNews.filter(({ id }) => {
  // Normalizar las barras para manejar Windows y Unix
  const normalizedId = id.replace(/\\/g, "/");
  return normalizedId.startsWith(`${lang}/`);
});

const sortedNews = news.sort(
  (a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
);
---

<MainLayout
  title={getTranslation(lang, "seo.pages.news.title")}
  description={getTranslation(lang, "seo.pages.news.description")}
>
  <Hero
    title={getTranslation(lang, "pages.news.title")}
    description={getTranslation(lang, "pages.news.description")}
  />

  <section class="mt-8">
    {
      sortedNews.length > 0 ? (
        <div class="grid gap-6 md:gap-8">
          {sortedNews.map((article) => (
            <article class="opacity-0 sequence-item-tool bg-neutral-800/50 rounded-2xl border border-neutral-800 p-6 hover:border-neutral-700 transition-colors group">
              <div class="flex flex-col space-y-4">
                <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4">
                  <div class="flex-1">
                    <h2 class="text-xl font-semibold text-white  transition-colors">
                      <a
                        href={`/${lang}/news/${article.id.replace(/\\/g, "/").replace(`${lang}/`, "")}`}
                        class="block"
                      >
                        {article.data.title}
                      </a>
                    </h2>
                    <div class="flex items-center gap-4 mt-2 text-sm text-neutral-400">
                      <span>Por {article.data.author}</span>
                      <span>•</span>
                      <time datetime={article.data.date.toISOString()}>
                        {article.data.date.toLocaleDateString("es-ES", {
                          year: "numeric",
                          month: "long",
                          day: "numeric",
                        })}
                      </time>
                    </div>
                  </div>

                  <div class="flex flex-wrap gap-2">
                    {article.data.tags?.slice(0, 3).map((tag) => (
                      <span class="px-3 py-1 bg-green-500/20 text-green-400 rounded-full text-sm">
                        {tag}
                      </span>
                    ))}
                    {article.data.tags && article.data.tags.length > 3 && (
                      <span class="px-3 py-1 bg-neutral-700/50 text-neutral-400 rounded-full text-sm">
                        +{article.data.tags.length - 3}
                      </span>
                    )}
                  </div>
                </div>

                <div class="text-neutral-300 leading-relaxed">
                  <p class="line-clamp-3">
                    {article.body
                      .slice(0, 200)
                      .replace(/^#.*\n\n?/, "")
                      .trim()}
                    ...
                  </p>
                </div>

                <div class="flex items-center justify-between pt-4 border-t border-neutral-800">
                  <div class="flex items-center gap-2 text-sm text-neutral-400">
                    <svg
                      class="w-4 h-4"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"
                      />
                    </svg>
                    <span>
                      {getTranslation(lang, "pages.news.completeReading")}
                    </span>
                  </div>

                  <a
                    href={`/${lang}/news/${article.id.replace(/\\/g, "/").replace(`${lang}/`, "")}`}
                    class="cursor-pointer px-4 py-2 bg-neutral-700 hover:bg-neutral-600 text-neutral-200 rounded transition-colors inline-flex items-center gap-2 text-sm font-medium"
                  >
                    {getTranslation(lang, "pages.news.readMore")}
                    <svg
                      class="w-4 h-4"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M9 5l7 7-7 7"
                      />
                    </svg>
                  </a>
                </div>
              </div>
            </article>
          ))}
        </div>
      ) : (
        <div class="text-center py-12">
          <div class="w-16 h-16 bg-neutral-800 rounded-full flex items-center justify-center mx-auto mb-4">
            <svg
              class="w-8 h-8 text-neutral-600"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9.5a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z"
              />
            </svg>
          </div>
          <h3 class="text-lg font-medium text-neutral-400 mb-2">
            {getTranslation(lang, "pages.news.noPosts")}
          </h3>
          <p class="text-neutral-500">
            {getTranslation(lang, "pages.news.noPostsDesc")}
          </p>
        </div>
      )
    }

    <!-- Estadísticas de noticias -->
    {
      sortedNews.length > 0 && (
        <div class="mt-12 p-6 bg-neutral-900/20 rounded-2xl border border-neutral-800">
          <div class="flex flex-col sm:flex-row items-center justify-between gap-4">
            <div class="text-center sm:text-left">
              <h3 class="text-lg font-semibold text-white">
                {getTranslation(lang, "pages.news.statisticsTitle")}
              </h3>
              <p class="text-neutral-400">
                {getTranslation(lang, "pages.news.statisticsDescription")}
              </p>
            </div>

            <div class="flex gap-6">
              <div class="text-center">
                <div class="text-2xl font-bold text-neutral-400">
                  {sortedNews.length}
                </div>
                <div class="text-sm text-neutral-400">
                  {getTranslation(lang, "pages.news.articles")}
                </div>
              </div>
            </div>
          </div>
        </div>
      )
    }
  </section>
</MainLayout>

<script>
  import { animateSequenceItems } from "../../../animate/timeline";

  // Múltiples listeners para asegurar la ejecución
  document.addEventListener("astro:page-load", () => {
    animateSequenceItems(".sequence-item-tool");
  });
  document.addEventListener("DOMContentLoaded", () => {
    animateSequenceItems(".sequence-item-tool");
  });
</script>
