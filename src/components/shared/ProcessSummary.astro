---
import { getToolById } from "@/config/tools.config";
import type { Language } from "@/types/language.type";
import { getTranslation } from "@/i18n/index";
import { actions } from "astro:actions";

const lang = Astro.params.lang as Language;

interface Process {
  id: number;
  process_name: string;
  count: number;
}

interface ProcessItem {
  success: boolean;
  topProcesses: Process[];
}

const process = [] as { name: string; progress: number }[];

const { data } = await Astro.callAction(actions.mostUsedTool, {});

if (data) {
  const { success, topProcesses } = data;
  if (success && topProcesses) {
    topProcesses.forEach((p) => {
      const tool = getToolById(p.process_name);
      if (tool) {
        process.push({ name: tool.name, progress: p.count });
      }
    });
  }
}
---

<div
  id="process-summary"
  class="select-none rounded-2xl border border-neutral-200 bg-white shadow-sm h-full overflow-hidden"
>
  <div class="px-5 pt-5 pb-4">
    <h3 class="font-medium text-xl text-neutral-800">
      {getTranslation(lang, "components.processSummary.title")}
    </h3>
  </div>
  <ul class="divide-y divide-neutral-100">
    {
      process.length === 0 && (
        <li class="text-sm text-neutral-500 py-12 text-center px-5">
          {getTranslation(lang, "common.noData")}
        </li>
      )
    }
    {
      process.map((p, index) => (
        <li
          id={`process-${index}`}
          class="flex items-center justify-between gap-4 px-5 py-4"
        >
          <p class="text-sm font-medium text-neutral-700 flex-1 leading-snug">
            {p.name}
          </p>
          <p
            class="process-count-up text-md font-semibold text-neutral-700 count-up-number tabular-nums"
            data-target={p.progress}
          >
            0
          </p>
        </li>
      ))
    }
  </ul>
</div>

<script>
  import { animateCountUp } from "@/assets/gsap/timeline";

  document.addEventListener("DOMContentLoaded", () => {
    animateCountUp(".process-count-up");
  });
</script>
