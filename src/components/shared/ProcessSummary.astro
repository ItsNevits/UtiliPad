---
interface Props {
  t: any;
}

const { t } = Astro.props;

const process = [
  { name: t.components.processSummary.items.filesConverted, progress: 62 },
  { name: t.components.processSummary.items.imagesProcessed, progress: 35 },
  { name: t.components.processSummary.items.urlDownloads, progress: 35 },
];
---

<div
  id="process-summary"
  class="rounded-2xl border border-neutral-800 bg-neutral-800/50"
>
  <div class="p-4 border-b border-neutral-700">
    <h3 class="font-semibold">{t.components.processSummary.title}</h3>
  </div>
  <ul class="p-4 space-y-4">
    {
      process.map((p, index) => (
        <li id={`process-${index}`} class="flex justify-between items-center">
          <p class="text-sm text-neutral-300">{p.name}</p>
          <p
            class="process-count-up text-sm text-neutral-400 mt-1 count-up-number"
            data-target={p.progress}
          >
            0
          </p>
        </li>
      ))
    }
  </ul>
</div>

<script>
  import { animateCountUp } from "../../animate/timeline";

  document.addEventListener("DOMContentLoaded", () => {
    animateCountUp(".process-count-up");
  });
</script>
