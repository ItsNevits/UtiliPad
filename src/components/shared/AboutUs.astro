---
import AboutUsImage from "@/assets/images/about-us.jpg";
import ExpandArrowIcon from "@/assets/icons/expand-arrow.svg";
import CloseIcon from "@/assets/icons/close.svg";
import Picture from "astro/components/Picture.astro";

import type { Language } from "@/types/language.type";
import type { AboutUs } from "@/types/about-us";
import { getTranslation } from "@/i18n/index";
const lang = Astro.params.lang as Language;

const teamMembers = getTranslation(
  lang,
  "components.aboutUs"
) as unknown as AboutUs;
---

<div
  class="about-us-carousel rounded-2xl border border-neutral-800 p-3 select-none overflow-hidden"
>
  <div class="carousel-container relative overflow-hidden">
    <div
      class="carousel-track flex transition-transform duration-500 ease-in-out"
    >
      {
        teamMembers.map((member, index) => (
          <div class="carousel-slide flex-shrink-0 w-full" data-index={index}>
            <div class="relative rounded-xl overflow-hidden aspect-[4/5]">
              <Picture
                src={AboutUsImage}
                alt={member.alt}
                class="object-cover w-full h-full"
                formats={["avif", "webp", "png"]}
                loading={index === 0 ? "eager" : "lazy"}
              />

              <div class="absolute top-3 left-3">
                <span class="inline-block px-3 py-1 bg-black/40 backdrop-blur-sm rounded-full text-xs font-medium border border-white/10">
                  {member.role}
                </span>
              </div>

              <div class="absolute inset-0 rounded-xl flex flex-col justify-end items-center pb-4 px-3">
                <div class="card-info w-full bg-black/30 backdrop-blur-lg border border-white/10 rounded-2xl p-3 transition-all duration-300">
                  <div class="flex justify-between items-center gap-2">
                    <h3 class="font-semibold text-lg truncate">
                      {member.name}
                    </h3>

                    <button
                      type="button"
                      class="cursor-pointer expand-btn flex-shrink-0 rounded-full bg-neutral-800/80 hover:bg-neutral-700/80 w-8 h-8 flex items-center justify-center transition-all duration-200 hover:scale-105 relative overflow-hidden"
                      aria-label="Ver más información"
                      aria-expanded="false"
                    >
                      <span class="expand-icon-wrapper absolute inset-0 flex items-center justify-center transition-opacity duration-200">
                        <Picture
                          src={ExpandArrowIcon}
                          alt="Expandir"
                          class="expand-icon w-4 h-4 object-contain pointer-events-none svg-color-neutral-400"
                          formats={["avif", "webp", "png"]}
                          loading="eager"
                        />
                      </span>
                      <span class="close-icon-wrapper absolute inset-0 flex items-center justify-center opacity-0 transition-opacity duration-200">
                        <Picture
                          src={CloseIcon}
                          alt="Cerrar"
                          class="close-icon w-4 h-4 object-contain pointer-events-none svg-color-neutral-400"
                          formats={["avif", "webp", "png"]}
                          loading="eager"
                        />
                      </span>
                    </button>
                  </div>

                  <div class="additional-info max-h-0 overflow-hidden transition-all duration-300">
                    <p class="text-sm text-neutral-200 mt-2 leading-relaxed">
                      {member.description}
                    </p>

                    {member.socials && (
                      <ul class="flex flex-wrap gap-3 mt-3 pt-3 border-t border-white/10">
                        {member.socials.github && (
                          <li>
                            <a
                              href={member.socials.github}
                              target="_blank"
                              rel="noopener noreferrer"
                              class="text-sm text-neutral-300 hover:text-white transition-colors duration-200 hover:underline"
                            >
                              GitHub
                            </a>
                          </li>
                        )}
                        {member.socials.linkedin && (
                          <li>
                            <a
                              href={member.socials.linkedin}
                              target="_blank"
                              rel="noopener noreferrer"
                              class="text-sm text-neutral-300 hover:text-white transition-colors duration-200 hover:underline"
                            >
                              LinkedIn
                            </a>
                          </li>
                        )}
                        {member.socials.twitter && (
                          <li>
                            <a
                              href={member.socials.twitter}
                              target="_blank"
                              rel="noopener noreferrer"
                              class="text-sm text-neutral-300 hover:text-white transition-colors duration-200 hover:underline"
                            >
                              Twitter
                            </a>
                          </li>
                        )}
                        {member.socials.instagram && (
                          <li>
                            <a
                              href={member.socials.instagram}
                              target="_blank"
                              rel="noopener noreferrer"
                              class="text-sm text-neutral-300 hover:text-white transition-colors duration-200 hover:underline"
                            >
                              Instagram
                            </a>
                          </li>
                        )}
                      </ul>
                    )}
                  </div>
                </div>
              </div>
            </div>
          </div>
        ))
      }
    </div>

    {
      teamMembers.length > 1 && (
        <div class="carousel-controls flex items-center justify-center gap-4 mt-2">
          <button
            class="cursor-pointer carousel-btn prev-btn bg-black/50 hover:bg-black/70 backdrop-blur-sm rounded-full w-9 h-9 flex items-center justify-center transition-all duration-200 hover:scale-110 border border-white/10"
            aria-label="Anterior"
          >
            <svg
              class="w-4 h-4 text-white"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M15 19l-7-7 7-7"
              />
            </svg>
          </button>

          <div class="carousel-dots flex justify-center gap-2">
            {teamMembers.map((_, index) => (
              <button
                class={`dot w-2 h-2 rounded-full transition-all duration-300 ${index === 0 ? "bg-white w-6" : "bg-neutral-600 hover:bg-neutral-500"}`}
                data-index={index}
                aria-label={`Ir al miembro ${index + 1}`}
              />
            ))}
          </div>

          <button
            class="cursor-pointer carousel-btn next-btn bg-black/50 hover:bg-black/70 backdrop-blur-sm rounded-full w-9 h-9 flex items-center justify-center transition-all duration-200 hover:scale-110 border border-white/10"
            aria-label="Siguiente"
          >
            <svg
              class="w-4 h-4 text-white"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M9 5l7 7-7 7"
              />
            </svg>
          </button>
        </div>
      )
    }
  </div>
</div>

<script>
  (function () {
    const carousels =
      document.querySelectorAll<HTMLElement>(".about-us-carousel");

    carousels.forEach((carousel) => {
      const track = carousel.querySelector<HTMLElement>(".carousel-track");
      const slides = carousel.querySelectorAll<HTMLElement>(".carousel-slide");
      const prevBtn = carousel.querySelector<HTMLButtonElement>(".prev-btn");
      const nextBtn = carousel.querySelector<HTMLButtonElement>(".next-btn");
      const dots = carousel.querySelectorAll<HTMLButtonElement>(".dot");

      if (!track || !slides.length) return;

      let currentIndex = 0;
      const totalSlides = slides.length;

      function updateCarousel() {
        if (!track) return;

        track.style.transform = `translateX(-${currentIndex * 100}%)`;

        // Close all expanded cards
        const allExpandBtns =
          carousel.querySelectorAll<HTMLButtonElement>(".expand-btn");
        allExpandBtns.forEach((btn) => {
          const cardInfo = btn.closest<HTMLElement>(".card-info");
          if (!cardInfo) return;

          const additionalInfo =
            cardInfo.querySelector<HTMLElement>(".additional-info");
          const expandIconWrapper = btn.querySelector<HTMLElement>(
            ".expand-icon-wrapper"
          );
          const closeIconWrapper = btn.querySelector<HTMLElement>(
            ".close-icon-wrapper"
          );

          if (additionalInfo) {
            additionalInfo.style.maxHeight = "0";
            additionalInfo.classList.add("max-h-0");
          }
          if (expandIconWrapper) expandIconWrapper.style.opacity = "1";
          if (closeIconWrapper) closeIconWrapper.style.opacity = "0";
          btn.setAttribute("aria-expanded", "false");
          btn.setAttribute("aria-label", "Ver más información");
        });

        dots.forEach((dot, index) => {
          if (index === currentIndex) {
            dot.classList.add("bg-white", "w-6");
            dot.classList.remove("bg-neutral-600", "w-2");
          } else {
            dot.classList.remove("bg-white", "w-6");
            dot.classList.add("bg-neutral-600", "w-2");
          }
        });

        if (prevBtn && nextBtn) {
          prevBtn.style.opacity = currentIndex === 0 ? "0.5" : "1";
          nextBtn.style.opacity =
            currentIndex === totalSlides - 1 ? "0.5" : "1";
        }
      }

      if (prevBtn) {
        prevBtn.addEventListener("click", () => {
          if (currentIndex > 0) {
            currentIndex--;
            updateCarousel();
          }
        });
      }

      if (nextBtn) {
        nextBtn.addEventListener("click", () => {
          if (currentIndex < totalSlides - 1) {
            currentIndex++;
            updateCarousel();
          }
        });
      }

      dots.forEach((dot) => {
        dot.addEventListener("click", () => {
          const index = parseInt(dot.dataset.index || "0");
          currentIndex = index;
          updateCarousel();
        });
      });

      // Expand/collapse functionality
      const expandBtns =
        carousel.querySelectorAll<HTMLButtonElement>(".expand-btn");

      expandBtns.forEach((btn) => {
        btn.addEventListener("click", function (e) {
          e.preventDefault();
          e.stopPropagation();

          const cardInfo = this.closest<HTMLElement>(".card-info");
          if (!cardInfo) {
            console.log("No card info found");
            return;
          }

          const additionalInfo =
            cardInfo.querySelector<HTMLElement>(".additional-info");
          const expandIconWrapper = this.querySelector<HTMLElement>(
            ".expand-icon-wrapper"
          );
          const closeIconWrapper = this.querySelector<HTMLElement>(
            ".close-icon-wrapper"
          );

          console.log("Elements found:", {
            additionalInfo: !!additionalInfo,
            expandIconWrapper: !!expandIconWrapper,
            closeIconWrapper: !!closeIconWrapper,
          });

          if (!additionalInfo || !expandIconWrapper || !closeIconWrapper)
            return;

          const isExpanded = this.getAttribute("aria-expanded") === "true";
          console.log("Is expanded:", isExpanded);

          if (isExpanded) {
            // Collapse
            additionalInfo.style.maxHeight = "0";
            additionalInfo.classList.add("max-h-0");
            expandIconWrapper.style.opacity = "1";
            closeIconWrapper.style.opacity = "0";
            this.setAttribute("aria-expanded", "false");
            this.setAttribute("aria-label", "Ver más información");
          } else {
            // Expand
            additionalInfo.style.maxHeight = additionalInfo.scrollHeight + "px";
            additionalInfo.classList.remove("max-h-0");
            expandIconWrapper.style.opacity = "0";
            closeIconWrapper.style.opacity = "1";
            this.setAttribute("aria-expanded", "true");
            this.setAttribute("aria-label", "Cerrar información");
          }
        });
      });

      // Keyboard navigation
      carousel.addEventListener("keydown", (e) => {
        if (e.key === "ArrowLeft" && currentIndex > 0) {
          currentIndex--;
          updateCarousel();
        } else if (e.key === "ArrowRight" && currentIndex < totalSlides - 1) {
          currentIndex++;
          updateCarousel();
        }
      });

      // Touch swipe support
      let touchStartX = 0;
      let touchEndX = 0;

      carousel.addEventListener("touchstart", (e) => {
        touchStartX = e.changedTouches[0].screenX;
      });

      carousel.addEventListener("touchend", (e) => {
        touchEndX = e.changedTouches[0].screenX;
        handleSwipe();
      });

      function handleSwipe() {
        const swipeThreshold = 50;
        if (
          touchStartX - touchEndX > swipeThreshold &&
          currentIndex < totalSlides - 1
        ) {
          currentIndex++;
          updateCarousel();
        } else if (
          touchEndX - touchStartX > swipeThreshold &&
          currentIndex > 0
        ) {
          currentIndex--;
          updateCarousel();
        }
      }
    });
  })();
</script>
